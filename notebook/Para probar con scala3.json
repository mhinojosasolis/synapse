{
	"name": "Para probar con scala3",
	"properties": {
		"folder": {
			"name": "pruebas"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SampleSpark3",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/dab9cf92-bd13-4888-9e53-624f4546db3c/resourceGroups/mbrs-rg-dev-copperdamart-001/providers/Microsoft.Synapse/workspaces/mbrs-synapse-dev-cym-001/bigDataPools/SampleSpark3",
				"name": "SampleSpark3",
				"type": "Spark",
				"endpoint": "https://mbrs-synapse-dev-cym-001.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SampleSpark3",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.0",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			}
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"table_name = 'test_1'\n",
					"db_name = 'delta'\n",
					"table_data_path = 'abfss://devproc@devmycdlake.dfs.core.windows.net/DataHistorica/minecare/delta/' + table_name +'/'\n",
					"sql_command = f'''\n",
					"                    CREATE TABLE IF NOT EXISTS {db_name}.{table_name} (                    \n",
					"                        campo1 string,\n",
					"                        campo2 string,\n",
					"                        PartitionDate date\n",
					"                      )\n",
					"                    USING DELTA\n",
					"                    PARTITIONED BY (PartitionDate)\n",
					"                    LOCATION '{table_data_path}'\n",
					"                  '''\n",
					"spark.sql(sql_command)"
				],
				"attachments": null,
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"alter table delta.trend_historico\n",
					"ADD COLUMNS  (cdc date)"
				],
				"attachments": null,
				"execution_count": 28
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"DESCRIBE delta.dlb_kpis_hour_historico"
				],
				"attachments": null,
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"select count(DISTINCT shiftid) from delta.dlb_kpis_hour_historico\n",
					"order by 1"
				],
				"attachments": null,
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"UPDATE #intfResult\n",
					"SET ReadDiff = (\n",
					"DATEDIFF(mi, #intfResult.ReadTime, (\n",
					"SELECT TOP 1 DATEADD(HH, @GMTTime,lastReadyFinishTime)\n",
					"FROM #statusDetails\n",
					"WHERE eqmtName = #intfResult.EqmtName\n",
					"))\n",
					")"
				],
				"attachments": null,
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"SELECT \n",
					"cast(unix_timestamp(lastReadyFinishTime) + \n",
					"(unix_timestamp(ReadTime)-unix_timestamp((cast(lastReadyFinishTime as TIMESTAMP) + INTERVAL 3 hours)))/(60) as TIMESTAMP)\n",
					"FROM delta.statusdetails s\n",
					"inner join delta.intfresult  i\n",
					"on s.eqmtName = i.eqmtName\n",
					"limit 1\n",
					""
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"insert into delta.test_1 values ('1','1',CURRENT_DATE())"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"select * from delta.test_1"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"update delta.test_1\n",
					"set campo1 = '2'\n",
					"where campo2=1"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"select * from delta.test_1"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"spark.sql(f''' create table delta.NOTIFICATIODETAILS_HISTORICO  USING delta location '{table_data_path}' ''')"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"sql_command=f'''\n",
					"                CREATE OR REPLACE TEMPORARY VIEW insert_view\n",
					"                as\n",
					"                select * from new\n",
					"                where (NotificationId,EventId,EquipmentId,ReadTime) not in\n",
					"                (select NotificationId,EventId,EquipmentId,ReadTime from hist)\n",
					"                '''\n",
					"spark.sql(sql_command)                "
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\n",
					"select date_format(ReadTime, 'yyyy-MM')Anio_Mes, date_format(ReadTime,'yyyy-MM-dd') fecha, count(*) from delta.reporting_notificationdetails_historico\n",
					"group by date_format(ReadTime, 'yyyy-MM'), date_format(ReadTime,'yyyy-MM-dd')\n",
					"order by 1 desc, 2 desc"
				],
				"attachments": null,
				"execution_count": null
			}
		]
	}
}