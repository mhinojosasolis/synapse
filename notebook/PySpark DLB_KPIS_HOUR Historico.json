{
	"name": "PySpark DLB_KPIS_HOUR Historico",
	"properties": {
		"folder": {
			"name": "dispatch/x_no usados"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "devsyncymspark",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1",
				"state": {
					"3b1b5026-d20f-4e72-9c55-4a9c48fbcfd3": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"D200": 0,
										"T000": 3600,
										"batch_date_utc": "2021-05-27T18:44:08.842Z",
										"T100": 3600,
										"L100": 0,
										"N000": 0,
										"P200": 0,
										"T200": 3600,
										"Hos": 3,
										"T300": 0,
										"checksum": "5693bc8af9b624bb1b4ca1d75f9139f221d4dfcf",
										"L200": 3600,
										"D100": 0,
										"D300": 0,
										"N200": 0,
										"L300": 0,
										"D000": 0,
										"Unit": "Bulldozer",
										"Eqmt": "ICV732",
										"L000": 3600,
										"P100": 0,
										"EqmtType": "Otros",
										"ShiftId": 210517001,
										"N100": 0
									},
									{
										"D200": 0,
										"T000": 3600,
										"batch_date_utc": "2021-05-27T18:44:08.842Z",
										"T100": 3600,
										"L100": 0,
										"N000": 0,
										"P200": 0,
										"T200": 0,
										"Hos": 2,
										"T300": 0,
										"checksum": "fa5cc6925324db65d6896199536986ad369191ba",
										"L200": 0,
										"D100": 3600,
										"D300": 0,
										"N200": 0,
										"L300": 0,
										"D000": 3600,
										"Unit": "Excavadora",
										"Eqmt": "RET04",
										"L000": 0,
										"P100": 0,
										"EqmtType": "CAT 385C",
										"ShiftId": 210517001,
										"N100": 0
									},
									{
										"D200": 0,
										"T000": 3600,
										"batch_date_utc": "2021-05-27T18:44:08.842Z",
										"T100": 3600,
										"L100": 0,
										"N000": 0,
										"P200": 3600,
										"T200": 3600,
										"Hos": 0,
										"T300": 3600,
										"checksum": "1126db18ffa75d78e43754d636675b76d85c573b",
										"L200": 0,
										"D100": 0,
										"D300": 0,
										"N200": 0,
										"L300": 0,
										"D000": 0,
										"Unit": "Sala Chancado",
										"Eqmt": "PRIM 2-1",
										"L000": 0,
										"P100": 0,
										"EqmtType": "CHANC PRIMARIO",
										"ShiftId": 210517001,
										"N100": 0
									},
									{
										"D200": 3600,
										"T000": 3600,
										"batch_date_utc": "2021-05-27T18:44:08.842Z",
										"T100": 3600,
										"L100": 0,
										"N000": 0,
										"P200": 0,
										"T200": 0,
										"Hos": 4,
										"T300": 0,
										"checksum": "6c09411c39db48aae939dcabcf928f148b80d931",
										"L200": 0,
										"D100": 0,
										"D300": 0,
										"N200": 0,
										"L300": 0,
										"D000": 3600,
										"Unit": "Camion",
										"Eqmt": "CDH72",
										"L000": 0,
										"P100": 0,
										"EqmtType": "KOM 930E",
										"ShiftId": 210517001,
										"N100": 0
									},
									{
										"D200": 0,
										"T000": 3600,
										"batch_date_utc": "2021-05-27T18:44:08.842Z",
										"T100": 3600,
										"L100": 0,
										"N000": 0,
										"P200": 0,
										"T200": 3600,
										"Hos": 5,
										"T300": 0,
										"checksum": "904432c105e0604b8ec84722547ed0ee8c13a69b",
										"L200": 3600,
										"D100": 0,
										"D300": 0,
										"N200": 0,
										"L300": 0,
										"D000": 0,
										"Unit": "Rodillo",
										"Eqmt": "RCC41",
										"L000": 3600,
										"P100": 0,
										"EqmtType": "CAT 533D",
										"ShiftId": 210517001,
										"N100": 0
									},
									{
										"D200": 0,
										"T000": 3600,
										"batch_date_utc": "2021-05-27T18:44:08.842Z",
										"T100": 3600,
										"L100": 0,
										"N000": 0,
										"P200": 0,
										"T200": 0,
										"Hos": 6,
										"T300": 0,
										"checksum": "d58f9cbb2f21e5526ad3e1bd5035310d640005ca",
										"L200": 0,
										"D100": 3600,
										"D300": 0,
										"N200": 0,
										"L300": 0,
										"D000": 3600,
										"Unit": "CAMIONETA",
										"Eqmt": "OP-23",
										"L000": 0,
										"P100": 0,
										"EqmtType": "Otros",
										"ShiftId": 210517001,
										"N100": 0
									},
									{
										"D200": 0,
										"T000": 3600,
										"batch_date_utc": "2021-05-27T18:44:08.842Z",
										"T100": 3600,
										"L100": 0,
										"N000": 0,
										"P200": 1535,
										"T200": 3600,
										"Hos": 6,
										"T300": 1535,
										"checksum": "fe75bdf4c3432eebd248a70926cde7ec93e8ac4e",
										"L200": 2065,
										"D100": 0,
										"D300": 0,
										"N200": 0,
										"L300": 0,
										"D000": 0,
										"Unit": "Wheeldozer",
										"Eqmt": "WDC05",
										"L000": 2065,
										"P100": 0,
										"EqmtType": "CAT 854K",
										"ShiftId": 210517001,
										"N100": 0
									},
									{
										"D200": 3600,
										"T000": 3600,
										"batch_date_utc": "2021-05-27T18:44:08.842Z",
										"T100": 3600,
										"L100": 0,
										"N000": 0,
										"P200": 0,
										"T200": 0,
										"Hos": 2,
										"T300": 0,
										"checksum": "51bdd532c27c0c19fdda891a8ac8cfff450d91d4",
										"L200": 0,
										"D100": 0,
										"D300": 0,
										"N200": 0,
										"L300": 0,
										"D000": 3600,
										"Unit": "Camion",
										"Eqmt": "CDH91",
										"L000": 0,
										"P100": 0,
										"EqmtType": "KOM 930E",
										"ShiftId": 210517001,
										"N100": 0
									},
									{
										"D200": 0,
										"T000": 3600,
										"batch_date_utc": "2021-05-27T18:44:08.842Z",
										"T100": 3600,
										"L100": 0,
										"N000": 0,
										"P200": 0,
										"T200": 3600,
										"Hos": 1,
										"T300": 0,
										"checksum": "bfb355b5654c28c71b52b480689cc339059920e8",
										"L200": 3600,
										"D100": 0,
										"D300": 0,
										"N200": 0,
										"L300": 0,
										"D000": 0,
										"Unit": "CAMIONETA",
										"Eqmt": "OP-62",
										"L000": 3600,
										"P100": 0,
										"EqmtType": "Otros",
										"ShiftId": 210517001,
										"N100": 0
									},
									{
										"D200": 0,
										"T000": 3600,
										"batch_date_utc": "2021-05-27T18:44:08.842Z",
										"T100": 3600,
										"L100": 0,
										"N000": 0,
										"P200": 3600,
										"T200": 3600,
										"Hos": 5,
										"T300": 3600,
										"checksum": "47efb2e3f08d1257baef9c27ebe75c320f2aeaf5",
										"L200": 0,
										"D100": 0,
										"D300": 0,
										"N200": 0,
										"L300": 0,
										"D000": 0,
										"Unit": "Camion",
										"Eqmt": "CDH49",
										"L000": 0,
										"P100": 0,
										"EqmtType": "KOM 930E",
										"ShiftId": 210517001,
										"N100": 0
									}
								],
								"schema": {
									"Eqmt": "string",
									"EqmtType": "string",
									"Unit": "string",
									"Hos": "int",
									"P200": "bigint",
									"P100": "bigint",
									"L300": "bigint",
									"L200": "bigint",
									"L100": "bigint",
									"D300": "bigint",
									"D200": "bigint",
									"D100": "bigint",
									"N200": "bigint",
									"N100": "bigint",
									"T300": "bigint",
									"T200": "bigint",
									"T100": "bigint",
									"T000": "bigint",
									"L000": "bigint",
									"D000": "bigint",
									"N000": "bigint",
									"batch_date_utc": "int",
									"checksum": "string",
									"ShiftId": "int"
								}
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"Eqmt"
									],
									"seriesFieldKeys": [
										"Hos"
									],
									"isStacked": false
								}
							}
						}
					},
					"acb44568-2db8-49d4-9587-f58807118cb3": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"ShiftId": 210522001,
										"count": 12
									},
									{
										"ShiftId": 210522002,
										"count": 12
									},
									{
										"ShiftId": 210523001,
										"count": 12
									},
									{
										"ShiftId": 210523002,
										"count": 12
									},
									{
										"ShiftId": 210524001,
										"count": 12
									},
									{
										"ShiftId": 210527001,
										"count": 950
									},
									{
										"ShiftId": 210527002,
										"count": 1896
									},
									{
										"ShiftId": 210528001,
										"count": 1896
									}
								],
								"schema": {
									"ShiftId": "int",
									"count": "bigint"
								}
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"count"
									],
									"seriesFieldKeys": [
										"ShiftId"
									],
									"isStacked": false
								}
							}
						}
					}
				}
			},
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/dab9cf92-bd13-4888-9e53-624f4546db3c/resourceGroups/mbrs-rg-dev-copperdamart-001/providers/Microsoft.Synapse/workspaces/mbrs-synapse-dev-cym-001/bigDataPools/devsyncymspark",
				"name": "devsyncymspark",
				"type": "Spark",
				"endpoint": "https://mbrs-synapse-dev-cym-001.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/devsyncymspark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 3,
				"cores": 8,
				"memory": 56,
				"extraHeader": null
			}
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"# traigo el archivo de la última carga\r\n",
					"\r\n",
					"#df = spark.read.load('abfss://devraw@devmycdlake.dfs.core.windows.net/dispatch/DLB_KPIS_HOUR_TEMP.parquet', format='parquet')\r\n",
					"df = spark.read.load('abfss://devraw@devmycdlake.dfs.core.windows.net/dispatch/DLB_KPIS_HOUR.parquet', format='parquet')\r\n",
					"#display(df.limit(10))"
				],
				"attachments": null,
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"#creo el historico (solo la primera vez)\r\n",
					"#df.write.mode(\"overwrite\").partitionBy(\"ShiftId\").parquet('abfss://devraw@devmycdlake.dfs.core.windows.net/dispatch/DLB_KPIS_HOUR_HISTORICO.parquet')"
				],
				"attachments": null,
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"# traigo el archivo historico\r\n",
					"\r\n",
					"df_hist = spark.read.load('abfss://devraw@devmycdlake.dfs.core.windows.net/dispatch/DLB_KPIS_HOUR_HISTORICO.parquet', format='parquet')\r\n",
					"display(df_hist.limit(10))"
				],
				"attachments": null,
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"df.count()"
				],
				"attachments": null,
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"df_hist.count()"
				],
				"attachments": null,
				"execution_count": 6
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Traigo los fechas mínimas y máximas de ambos dataframes"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"new_data_max_date = df.groupBy().max(\"ShiftId\").collect()[0][0]\r\n",
					"new_data_max_date"
				],
				"attachments": null,
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"new_data_min_date = df.groupBy().min(\"ShiftId\").collect()[0][0]\r\n",
					"new_data_min_date"
				],
				"attachments": null,
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"hist_data_max_date = df.groupBy().max(\"ShiftId\").collect()[0][0]\r\n",
					"hist_data_max_date"
				],
				"attachments": null,
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"hist_data_min_date = df.groupBy().min(\"ShiftId\").collect()[0][0]\r\n",
					"hist_data_min_date"
				],
				"attachments": null,
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"#display(df.groupBy(\"ShiftId\").count().orderBy(\"ShiftId\"))\r\n",
					"#display(df_hist.groupBy(\"ShiftId\").count().orderBy(\"ShiftId\"))"
				],
				"attachments": null,
				"execution_count": 11
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### Genero dataframe con las filas que son nuevas (df) y no están en el histórico (df_hist)"
				],
				"attachments": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"# genero lista con todas las filas menos 'batch_date_utc', que nunca va a coincidir entre los 2 data frames\r\n",
					"# la idea es usar el select para no crear 2 dataframes al eliminar la la fecha\r\n",
					"\r\n",
					"cols = df.columns\r\n",
					"cols.remove('batch_date_utc')\r\n",
					"\r\n",
					"df_new_rows = df.select(cols) \\\r\n",
					"                .subtract(df_hist.select(cols))\\\r\n",
					"                #.filter(df.ShiftId >= new_data_min_date)\r\n",
					"df_new_rows.count()"
				],
				"attachments": null,
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"#display(df_new_rows)"
				],
				"attachments": null,
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"display(df_new_rows.groupBy(\"ShiftId\").count().orderBy(\"ShiftId\"))\r\n",
					"\r\n",
					"#.filter('ShiftId > 210427002').show()\r\n",
					"\r\n",
					"# TODO: borrar las del primer día!"
				],
				"attachments": null,
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"# filas que están en el \r\n",
					"#df.select('checksum').subtract(df_hist.select('checksum')).show()\r\n",
					""
				],
				"attachments": null,
				"execution_count": 15
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"df.createOrReplaceTempView('new')\r\n",
					"\r\n",
					"df_hist.createOrReplaceTempView('hist')"
				],
				"attachments": null,
				"execution_count": 16
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"select * from hist limit 10"
				],
				"attachments": null,
				"execution_count": 17
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT ShiftId, count(*) \r\n",
					"FROM new\r\n",
					"--FROM hist\r\n",
					"WHERE ShiftId = 210524001\r\n",
					"--AND checksum is NULL\r\n",
					"\r\n",
					"--ShiftId,Eqmt,EqmtType,Unit,checksum\r\n",
					"GROUP BY ShiftId\r\n",
					"ORDER BY ShiftId"
				],
				"attachments": null,
				"execution_count": 18
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"SELECT \r\n",
					"--n.*, h.*\r\n",
					"--count(*) \r\n",
					"n.ShiftId, n.Eqmt, n.EqmtType, n.Unit, n.Hos, n.checksum, n.batch_date_utc,\r\n",
					"--h.ShiftId, h.Eqmt, h.EqmtType, h.Unit, h.Hos, \r\n",
					"h.checksum AS checksum_hist, h.batch_date_utc AS  batch_date_utc_hist\r\n",
					"\r\n",
					"FROM new n LEFT JOIN hist h \r\n",
					"\r\n",
					"ON (n.ShiftId = h.ShiftId AND n.Eqmt = h.Eqmt AND n.EqmtType = h.EqmtType AND n.Unit = h.Unit AND n.Hos = h.Hos)\r\n",
					"\r\n",
					"\r\n",
					"WHERE n.ShiftId = \r\n",
					"210524001\r\n",
					"--210527001\r\n",
					"\r\n",
					"AND n.checksum <> h.checksum"
				],
				"attachments": null,
				"execution_count": 19
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"df.columns"
				],
				"attachments": null,
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					""
				],
				"attachments": null,
				"execution_count": null
			}
		]
	}
}