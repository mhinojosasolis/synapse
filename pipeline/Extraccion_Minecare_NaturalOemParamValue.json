{
	"name": "Extraccion_Minecare_NaturalOemParamValue",
	"properties": {
		"activities": [
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "v_nombre_tabla",
					"value": "NATURALOEMPARAMVALUE"
				}
			},
			{
				"name": "Lookup",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "ds_tablas_pk_date_csv",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Filter1",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Lookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().table,variables('v_nombre_tabla'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter1').output.Value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data to NaturalOemParamValue_Temp",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "SELECT [Id]\n      ,[EquipmentId]\n      ,[OemParamTypeId]\n      ,[ReadTime]\n      ,[FloatValue]\n      ,[StringValue]\n      ,[SiteId]\n\t  ,GETUTCDATE() as [ExtractDate]\n  FROM [Minecare267].[dbo].[NaturalOemParamValue]\n  where [ReadTime] BETWEEN  DATEADD(HOUR,-@{item().incremental_horas},GETDATE()) and GETDATE()",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "Id",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "Id",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "EquipmentId",
												"type": "Int32",
												"physicalType": "int"
											},
											"sink": {
												"name": "EquipmentId",
												"type": "Int32",
												"physicalType": "INT_32"
											}
										},
										{
											"source": {
												"name": "OemParamTypeId",
												"type": "Int32",
												"physicalType": "int"
											},
											"sink": {
												"name": "OemParamTypeId",
												"type": "Int32",
												"physicalType": "INT_32"
											}
										},
										{
											"source": {
												"name": "ReadTime",
												"type": "DateTime",
												"physicalType": "datetime"
											},
											"sink": {
												"name": "ReadTime",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "FloatValue",
												"type": "Double",
												"physicalType": "float"
											},
											"sink": {
												"name": "FloatValue",
												"type": "Double",
												"physicalType": "DOUBLE"
											}
										},
										{
											"source": {
												"name": "StringValue",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "StringValue",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "SiteId",
												"type": "Byte",
												"physicalType": "tinyint"
											},
											"sink": {
												"name": "SiteId",
												"type": "Byte",
												"physicalType": "INT_32"
											}
										},
										{
											"source": {
												"name": "ExtractDate",
												"type": "DateTime",
												"physicalType": "datetime"
											},
											"sink": {
												"name": "ExtractDate",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										}
									],
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "NATURALOEMPARAMVALUE",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "MINECARE_RAWTEMP_PARAMETRIZADO",
									"type": "DatasetReference",
									"parameters": {
										"filename": "@{variables('v_nombre_tabla')}_TEMP.parquet"
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Insert_Parquet_to_Delta",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/DEV/Common_Notebooks/Insert_Parquet_to_Delta",
					"baseParameters": {
						"p_nombre_tabla": {
							"value": "@variables('v_nombre_tabla')",
							"type": "Expression"
						},
						"p_tipo_carga": "INCREMENTAL",
						"p_origen": "MINECARE"
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_databricks",
					"type": "LinkedServiceReference"
				}
			}
		],
		"variables": {
			"v_nombre_tabla": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Minecare/Incremental"
		},
		"annotations": [],
		"lastPublishTime": "2021-08-13T21:47:37Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}